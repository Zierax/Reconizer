#!/bin/bash

VERSION="1.0"

TARGET=$1

if [[ -z $TARGET ]]; then
    echo -e "\033[1;31m[+] Usage: $0 <domain>\033[0m"
    exit 1
fi

WORKING_DIR=$(pwd)
TOOLS_PATH="$WORKING_DIR/tools"
RESULTS_PATH="$WORKING_DIR/results/$TARGET"
SUB_PATH="$RESULTS_PATH/subdomains"
DNS_PATH="$RESULTS_PATH/dns"
CORS_PATH="$RESULTS_PATH/cors"
IP_PATH="$RESULTS_PATH/ip"
PSCAN_PATH="$RESULTS_PATH/portscan"
SSHOT_PATH="$RESULTS_PATH/screenshot"
DIR_PATH="$RESULTS_PATH/directory"
RECON_PATH="$RESULTS_PATH/recon"
REPORT_PATH="$RESULTS_PATH/report"

# Color codes
RED="\033[1;31m"
GREEN="\033[1;32m"
BLUE="\033[1;36m"
YELLOW="\033[1;33m"
RESET="\033[0m"

setupDir(){
    echo -e "${GREEN}--==[ Setting things up ]==--${RESET}"
    echo -e "${RED}\n[+] Creating results directories...${RESET}"
    rm -rf $RESULTS_PATH
    mkdir -p $SUB_PATH $DNS_PATH $CORS_PATH $IP_PATH $PSCAN_PATH $SSHOT_PATH $DIR_PATH $RECON_PATH $REPORT_PATH
    echo -e "${BLUE}[*] Directories created under $RESULTS_PATH${RESET}"
}

runBanner(){
    name=$1
    echo -e "${RED}\n[+] Running $name...${RESET}"
}

enumSubs(){
    echo -e "${GREEN}\n--==[ Enumerating subdomains ]==--${RESET}"
    runBanner "Amass"
    amass enum -d $TARGET -o $SUB_PATH/amass.txt

    runBanner "Subfinder"
    subfinder -d $TARGET -o $SUB_PATH/subfinder.txt

    runBanner "Assetfinder"
    assetfinder --subs-only $TARGET | tee $SUB_PATH/assetfinder.txt

    runBanner "Findomain"
    findomain -t $TARGET -u $SUB_PATH/findomain.txt

    echo -e "${RED}\n[+] Combining subdomains...${RESET}"
    cat $SUB_PATH/*.txt | sort -u > $SUB_PATH/final-subdomains.txt
    echo -e "${BLUE}[*] Check the list of subdomains at $SUB_PATH/final-subdomains.txt${RESET}"

    echo -e "${GREEN}\n--==[ Checking for subdomain takeovers ]==--${RESET}"
    runBanner "Subjack"
    subjack -w $SUB_PATH/final-subdomains.txt -t 100 -timeout 30 -ssl -c ~/go/src/github.com/haccer/subjack/fingerprints.json -v 3 -o $SUB_PATH/takeover.txt
    echo -e "${BLUE}[*] Check subjack's result at $SUB_PATH/takeover.txt${RESET}"
}

dnsRecon(){
    echo -e "${GREEN}\n--==[ Performing DNS Reconnaissance ]==--${RESET}"

    runBanner "dnsrecon"
    dnsrecon -d $TARGET -a -j $DNS_PATH/dnsrecon.json
    echo -e "${BLUE}[*] DNSRecon results saved at $DNS_PATH/dnsrecon.json${RESET}"

    runBanner "dnsmap"
    dnsmap $TARGET -r $DNS_PATH/dnsmap.txt
    echo -e "${BLUE}[*] DNSMap results saved at $DNS_PATH/dnsmap.txt${RESET}"

    runBanner "dnsx"
    dnsx -d $TARGET -r $DNS_PATH/dnsx.txt
    echo -e "${BLUE}[*] dnsx results saved at $DNS_PATH/dnsx.txt${RESET}"

    runBanner "DNSenum"
    dnsenum $TARGET -o $DNS_PATH/dnsenum.txt
    echo -e "${BLUE}[*] DNSenum results saved at $DNS_PATH/dnsenum.txt${RESET}"

    runBanner "Rebind"
    rebind $TARGET -o $DNS_PATH/rebind.txt
    echo -e "${BLUE}[*] Rebind results saved at $DNS_PATH/rebind.txt${RESET}"
}

corsScan(){
    echo -e "${GREEN}\n--==[ Checking CORS configuration ]==--${RESET}"
    runBanner "CORScanner"
    python3 $TOOLS_PATH/CORScanner/cors_scan.py -t 50 -i $SUB_PATH/final-subdomains.txt | tee $CORS_PATH/cors.txt
    echo -e "${BLUE}[*] Check the result at $CORS_PATH/cors.txt${RESET}"
}

enumIPs(){
    echo -e "${GREEN}\n--==[ Resolving IP addresses ]==--${RESET}"
    runBanner "massdns"
    massdns -r $TOOLS_PATH/massdns/lists/resolvers.txt -q -t A -o S -w $IP_PATH/massdns.raw $SUB_PATH/final-subdomains.txt
    grep -e ' A ' $IP_PATH/massdns.raw | cut -d 'A' -f 2 | tr -d ' ' > $IP_PATH/massdns.txt
    sort -u $IP_PATH/massdns.txt > $IP_PATH/final-ips.txt
    echo -e "${BLUE}[*] Check the list of IP addresses at $IP_PATH/final-ips.txt${RESET}"
}

portScan(){
    echo -e "${GREEN}\n--==[ Port-scanning targets ]==--${RESET}"
    runBanner "Masscan"
    sudo masscan -p1-65535 --rate 10000 -iL $IP_PATH/final-ips.txt -oX $PSCAN_PATH/masscan.xml
    xsltproc -o $PSCAN_PATH/masscan.html $TOOLS_PATH/nmap-bootstrap.xsl $PSCAN_PATH/masscan.xml
    echo -e "${BLUE}[*] Masscan Done! View the HTML report at $PSCAN_PATH/masscan.html${RESET}"

    runBanner "Nmap Quick Scan"
    sudo nmap -sS -T4 -F -iL $IP_PATH/final-ips.txt -oX $PSCAN_PATH/nmap-quick.xml
    xsltproc -o $PSCAN_PATH/nmap-quick.html $PSCAN_PATH/nmap-quick.xml
    echo -e "${BLUE}[*] Nmap Quick Scan Done! View the HTML report at $PSCAN_PATH/nmap-quick.html${RESET}"

    runBanner "Nmap Full Scan"
    sudo nmap -sS -T4 -p- -iL $IP_PATH/final-ips.txt -oX $PSCAN_PATH/nmap-full.xml
    xsltproc -o $PSCAN_PATH/nmap-full.html $PSCAN_PATH/nmap-full.xml
    echo -e "${BLUE}[*] Nmap Full Scan Done! View the HTML report at $PSCAN_PATH/nmap-full.html${RESET}"

    runBanner "Nmap Script Scan"
    sudo nmap -sC -sV -T4 -iL $IP_PATH/final-ips.txt -oX $PSCAN_PATH/nmap-script.xml
    xsltproc -o $PSCAN_PATH/nmap-script.html $PSCAN_PATH/nmap-script.xml
    echo -e "${BLUE}[*] Nmap Script Scan Done! View the HTML report at $PSCAN_PATH/nmap-script.html${RESET}"
}

visualRecon(){
    echo -e "${GREEN}\n--==[ Taking screenshots ]==--${RESET}"
    runBanner "EyeWitness"
    eyewitness --web -f $SUB_PATH/final-subdomains.txt --no-prompt -d $SSHOT_PATH/eyewitness
    echo -e "${BLUE}[*] Check the result at $SSHOT_PATH/eyewitness/report.html${RESET}"
}

bruteDir(){
    echo -e "${GREEN}\n--==[ Bruteforcing directories ]==--${RESET}"
    runBanner "FFUF"
    while read -r url; do
        fqdn=$(echo $url | sed -e 's;https\?://;;' | sed -e 's;/.*$;;')
        ffuf -w $WORDLIST_PATH/raft-large-words.txt -u $url/FUZZ -o $DIR_PATH/ffuf_$fqdn.json
    done < $SSHOT_PATH/eyewitness/urls.txt

    runBanner "Dirsearch"
    while read -r url; do
        fqdn=$(echo $url | sed -e 's;https\?://;;' | sed -e 's;/.*$;;')
        dirsearch -u $url -e php,asp,aspx,jsp,html,zip,jar,sql -x 500,503 -t 100 -r -w $WORDLIST_PATH/raft-large-words.txt --plain-text-report=$DIR_PATH/dirsearch_$fqdn.txt
    done < $SSHOT_PATH/eyewitness/urls.txt

    runBanner "Dirb"
    while read -r url; do
        fqdn=$(echo $url | sed -e 's;https\?://;;' | sed -e 's;/.*$;;')
        dirb $url $WORDLIST_PATH/raft-large-words.txt -o $DIR_PATH/dirb_$fqdn.txt
    done < $SSHOT_PATH/eyewitness/urls.txt

    echo -e "${BLUE}[*] Check the results at $DIR_PATH${RESET}"
}

cmsScan(){
    echo -e "${GREEN}\n--==[ Scanning for CMS vulnerabilities ]==--${RESET}"
    runBanner "WPScan"
    wpscan --url $TARGET --enumerate vp,vt,cb,dbe,u,m --output $RECON_PATH/wpscan.txt
    echo -e "${BLUE}[*] WPScan results saved at $RECON_PATH/wpscan.txt${RESET}"
}

vulnScan(){
    echo -e "${GREEN}\n--==[ Scanning for vulnerabilities ]==--${RESET}"
    runBanner "Nikto"
    nikto -h $TARGET -o $RECON_PATH/nikto.txt
    echo -e "${BLUE}[*] Nikto results saved at $RECON_PATH/nikto.txt${RESET}"

    runBanner "WhatWeb"
    whatweb -a 3 $TARGET --log-xml=$RECON_PATH/whatweb.xml
    echo -e "${BLUE}[*] WhatWeb results saved at $RECON_PATH/whatweb.xml${RESET}"

    runBanner "Skipfish"
    skipfish -o $RECON_PATH/skipfish $TARGET
    echo -e "${BLUE}[*] Skipfish results saved at $RECON_PATH/skipfish/index.html${RESET}"
}

gatherInfo(){
    echo -e "${GREEN}\n--==[ Gathering Additional Information ]==--${RESET}"

    runBanner "DNS and WHOIS Information"
    dig +short ANY $TARGET > $RECON_PATH/dns.txt
    whois $TARGET > $RECON_PATH/whois.txt
    echo -e "${BLUE}[*] DNS information saved at $RECON_PATH/dns.txt${RESET}"
    echo -e "${BLUE}[*] WHOIS information saved at $RECON_PATH/whois.txt${RESET}"

    runBanner "HTTP Probing with httprobe"
    cat $SUB_PATH/final-subdomains.txt | httprobe > $RECON_PATH/httprobe.txt
    echo -e "${BLUE}[*] HTTP probing results saved at $RECON_PATH/httprobe.txt${RESET}"

    runBanner "Gathering Wayback Machine URLs"
    cat $SUB_PATH/final-subdomains.txt | waybackurls > $RECON_PATH/waybackurls.txt
    echo -e "${BLUE}[*] Wayback Machine URLs saved at $RECON_PATH/waybackurls.txt${RESET}"

    runBanner "Gathering URLs with gau"
    cat $SUB_PATH/final-subdomains.txt | gau > $RECON_PATH/gau.txt
    echo -e "${BLUE}[*] URLs gathered with gau saved at $RECON_PATH/gau.txt${RESET}"
}

generateReport(){
    echo -e "${GREEN}\n--==[ Generating HTML Report ]==--${RESET}"
    cat <<EOT > $REPORT_PATH/report.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Recon Report for $TARGET</title>
    <style>
        body {
            font-family: 'Courier New', Courier, monospace;
            margin: 0;
            padding: 0;
            background: #0f0f0f;
            color: #00ff00;
        }

        header {
            background: #111;
            color: #00ff00;
            padding: 20px;
            text-align: center;
            border-bottom: 1px solid #00ff00;
        }

        section {
            padding: 20px;
            max-width: 800px;
            margin: 0 auto;
            background: #1a1a1a;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 255, 0, 0.5);
        }

        h1, h2, h3 {
            color: #00ff00;
        }

        h1 {
            font-size: 2.5em;
        }

        h2 {
            font-size: 1.8em;
            margin-top: 40px;
            border-bottom: 2px solid #00ff00;
            padding-bottom: 10px;
        }

        h3 {
            font-size: 1.4em;
            margin-top: 20px;
        }

        .result {
            background: #000;
            padding: 15px;
            margin-bottom: 10px;
            border: 1px solid #00ff00;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 255, 0, 0.3);
        }

        pre {
            background: #1a1a1a;
            padding: 10px;
            border-radius: 5px;
            overflow-x: auto;
            font-family: 'Courier New', Courier, monospace;
            font-size: 0.9em;
            color: #00ff00;
        }

        .link {
            color: #00ff00;
            text-decoration: none;
            font-weight: bold;
        }

        .link:hover {
            text-decoration: underline;
        }

        footer {
            background: #111;
            color: #00ff00;
            padding: 10px;
            text-align: center;
            position: fixed;
            width: 100%;
            bottom: 0;
            border-top: 1px solid #00ff00;
        }
    </style>
</head>
<body>
    <header>
        <h1>Recon Report for $TARGET</h1>
    </header>
    <section>
        <h2>Subdomain Enumeration</h2>
        <div class="result">
            <h3>Amass, Subfinder, Assetfinder, Findomain</h3>
            <pre>$(cat $SUB_PATH/final-subdomains.txt)</pre>
        </div>
        <div class="result">
            <h3>Subdomain Takeover Check (Subjack)</h3>
            <pre>$(cat $SUB_PATH/takeover.txt)</pre>
        </div>

        <h2>DNS Reconnaissance</h2>
        <div class="result">
            <h3>DNSRecon</h3>
            <pre>$(cat $DNS_PATH/dnsrecon.json)</pre>
        </div>
        <div class="result">
            <h3>DNSMap</h3>
            <pre>$(cat $DNS_PATH/dnsmap.txt)</pre>
        </div>
        <div class="result">
            <h3>dnsx</h3>
            <pre>$(cat $DNS_PATH/dnsx.txt)</pre>
        </div>
        <div class="result">
            <h3>DNSenum</h3>
            <pre>$(cat $DNS_PATH/dnsenum.txt)</pre>
        </div>
        <div class="result">
            <h3>Rebind</h3>
            <pre>$(cat $DNS_PATH/rebind.txt)</pre>
        </div>

        <h2>CORS Configuration</h2>
        <div class="result">
            <h3>CORScanner</h3>
            <pre>$(cat $CORS_PATH/cors.txt)</pre>
        </div>

        <h2>IP Addresses</h2>
        <div class="result">
            <h3>Resolved IPs (MassDNS)</h3>
            <pre>$(cat $IP_PATH/final-ips.txt)</pre>
        </div>

        <h2>Port Scanning</h2>
        <div class="result">
            <h3>Masscan</h3>
            <a class="link" href="$PSCAN_PATH/masscan.html">View Masscan Report</a>
        </div>
        <div class="result">
            <h3>Nmap Quick Scan</h3>
            <a class="link" href="$PSCAN_PATH/nmap-quick.html">View Nmap Quick Scan Report</a>
        </div>
        <div class="result">
            <h3>Nmap Full Scan</h3>
            <a class="link" href="$PSCAN_PATH/nmap-full.html">View Nmap Full Scan Report</a>
        </div>
        <div class="result">
            <h3>Nmap Script Scan</h3>
            <a class="link" href="$PSCAN_PATH/nmap-script.html">View Nmap Script Scan Report</a>
        </div>

        <h2>Visual Reconnaissance</h2>
        <div class="result">
            <h3>EyeWitness</h3>
            <a class="link" href="$SSHOT_PATH/eyewitness/report.html">View EyeWitness Report</a>
        </div>

        <h2>Directory Bruteforcing</h2>
        <div class="result">
            <h3>FFUF</h3>
            <pre>$(cat $DIR_PATH/ffuf_*.json)</pre>
        </div>
        <div class="result">
            <h3>Dirsearch</h3>
            <pre>$(cat $DIR_PATH/dirsearch_*.txt)</pre>
        </div>
        <div class="result">
            <h3>Dirb</h3>
            <pre>$(cat $DIR_PATH/dirb_*.txt)</pre>
        </div>

        <h2>CMS Scanning</h2>
        <div class="result">
            <h3>WPScan</h3>
            <pre>$(cat $RECON_PATH/wpscan.txt)</pre>
        </div>

        <h2>Vulnerability Scanning</h2>
        <div class="result">
            <h3>Nikto</h3>
            <pre>$(cat $RECON_PATH/nikto.txt)</pre>
        </div>
        <div class="result">
            <h3>WhatWeb</h3>
            <pre>$(cat $RECON_PATH/whatweb.xml)</pre>
        </div>
        <div class="result">
            <h3>Skipfish</h3>
            <a class="link" href="$RECON_PATH/skipfish/index.html">View Skipfish Report</a>
        </div>

        <h2>Additional Information</h2>
        <div class="result">
            <h3>DNS Information</h3>
            <pre>$(cat $RECON_PATH/dns.txt)</pre>
        </div>
        <div class="result">
            <h3>WHOIS Information</h3>
            <pre>$(cat $RECON_PATH/whois.txt)</pre>
        </div>
        <div class="result">
            <h3>HTTP Probing</h3>
            <pre>$(cat $RECON_PATH/httprobe.txt)</pre>
        </div>
        <div class="result">
            <h3>Wayback URLs</h3>
            <pre>$(cat $RECON_PATH/waybackurls.txt)</pre>
        </div>
        <div class="result">
            <h3>Gau URLs</h3>
            <pre>$(cat $RECON_PATH/gau.txt)</pre>
        </div>
    </section>
    <footer>
        <p>Recon Report generated by Automated Recon Script v$VERSION</p>
    </footer>
</body>
</html>

EOT

    echo -e "${BLUE}[*] HTML report generated at $REPORT_PATH/report.html${RESET}"
}

main(){
    setupDir
    enumSubs
    dnsRecon
    corsScan
    enumIPs
    portScan
    visualRecon
    bruteDir
    cmsScan
    vulnScan
    gatherInfo
    generateReport
}

main
